{"version":3,"sources":["Components/card.js","Components/CardList.js","Components/searchBox.js","Components/scroll.js","Containers/App.js","index.js"],"names":["Card","id","name","username","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","App","useState","users","setUsers","searchField","setSearchField","useEffect","fetch","then","res","json","catch","err","console","log","filterRobots","filter","toLowerCase","includes","length","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAceA,MAZf,YAA4C,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,MAC/B,OACI,sBAAKC,UAAU,mCAAf,UACI,qBAAKC,IAAG,+BAA0BL,EAA1B,YAAwC,iBAAYM,IAAG,mBAAcJ,KAC7E,gCACI,6BAAKD,IACL,4BAAIE,WCeLI,MApBf,YAA6B,IAAVC,EAAS,EAATA,OACf,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIX,GAAIU,EAAKV,GACTC,KAAMS,EAAKT,KACXC,SAAUQ,EAAKR,SACfC,MAAOO,EAAKP,OAJPQ,SCKdC,MAbf,YAAoC,IAAhBC,EAAe,EAAfA,aAChB,OACI,8BACI,uBACIT,UAAU,gDACVU,KAAK,SACLC,YAAY,wBACZC,SAAUH,OCCXI,MARf,SAAgBC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,SAAzC,SACKH,EAAMI,YCsCJC,MAtCf,WACE,MAA4BC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KACA,EAAuCF,mBAAS,IAAhD,mBAAQG,EAAR,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAvB,GAAWkB,EAASlB,MACzB0B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,IAEH,IAIMG,EAAeb,EAAMc,QAAO,SAAA7B,GAChC,OAAOA,EAAKT,KAAKuC,cAAcC,SAASd,EAAYa,kBAGtD,OAAIf,EAAMiB,OAQN,sBAAKtC,UAAU,KAAf,UACE,oBAAIJ,GAAG,SAASI,UAAU,QAA1B,0BACA,cAAC,EAAD,CAAWS,aAlBM,SAAC8B,GACtBf,EAAee,EAAEC,OAAOC,UAkBpB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUrC,OAAQ8B,SAVtB,qBAAKlC,UAAU,KAAf,SACE,oBAAIJ,GAAG,SAASI,UAAU,QAA1B,2B,MCrBR0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4530df81.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Card({id, name, username, email}) {\r\n    return (\r\n        <div className=\"bg-black dib br3 ma3 pa3 grow tc\">\r\n            <img src={`https://robohash.org/${id}?200*200`} aria-hidden alt={`image of ${username}`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './card';\r\n\r\nfunction CardList({robots}) {\r\n    return (\r\n        <div>\r\n        {\r\n            robots.map((user, i) =>{\r\n                return (\r\n                    <Card \r\n                        key={i} \r\n                        id={user.id} \r\n                        name={user.name} \r\n                        username={user.username} \r\n                        email={user.email}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react';\r\n\r\nfunction SearchBox({searchChange}) {\r\n    return (\r\n        <div>\r\n            <input \r\n                className=\"pa3 br3 ba b--black bg-dark-gray white mb4 tc\"\r\n                type=\"search\" \r\n                placeholder=\"Search Robots Here...\" \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nfunction Scroll(props) {\r\n    return (\r\n        <div style={{overflowY:'scroll', height: '550px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React, {useState, useEffect} from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/searchBox';\nimport Scroll from '../Components/scroll';\n\nfunction App() {\n  const [ users, setUsers ] = useState([]);\n  const [ searchField, setSearchField] = useState('');\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(robots => {setUsers(robots)})\n    .catch(err => console.log(err));\n  }, []);\n\n  const onSearchChange = (e) => {\n    setSearchField(e.target.value);\n  }\n\n  const filterRobots = users.filter(user => {\n    return user.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  if(!users.length){\n    return (\n      <div className=\"tc\">\n        <h2 id=\"header\" className=\"f1 tc\">Loading...</h2>\n      </div>\n    );\n  }else{\n    return (\n      <div className=\"tc\">\n        <h2 id=\"header\" className=\"f1 tc\">Robo Friends</h2>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <CardList robots={filterRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}